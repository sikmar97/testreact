[{"C:\\Workspace\\Skola\\React\\testapp\\src\\index.js":"1","C:\\Workspace\\Skola\\React\\testapp\\src\\App.js":"2","C:\\Workspace\\Skola\\React\\testapp\\src\\reportWebVitals.js":"3","C:\\Workspace\\Skola\\React\\testapp\\src\\routes\\Routing.js":"4","C:\\Workspace\\Skola\\React\\testapp\\src\\view\\HomePage.js":"5","C:\\Workspace\\Skola\\React\\testapp\\src\\components\\Navigationbar\\NavigationBar.js":"6","C:\\Workspace\\Skola\\React\\testapp\\src\\view\\SignInView.js":"7","C:\\Workspace\\Skola\\React\\testapp\\src\\shared\\global\\provider\\UserProvider.js":"8","C:\\Workspace\\Skola\\React\\testapp\\src\\components\\profile\\Profile.js":"9"},{"size":479,"mtime":1607017961050,"results":"10","hashOfConfig":"11"},{"size":389,"mtime":1608284380741,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":881,"mtime":1607621283006,"results":"14","hashOfConfig":"11"},{"size":553,"mtime":1608317650646,"results":"15","hashOfConfig":"11"},{"size":909,"mtime":1607018718973,"results":"16","hashOfConfig":"11"},{"size":1107,"mtime":1607620703015,"results":"17","hashOfConfig":"11"},{"size":367,"mtime":1607016340891,"results":"18","hashOfConfig":"11"},{"size":477,"mtime":1607017767981,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"30zwnq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"C:\\Workspace\\Skola\\React\\testapp\\src\\index.js",[],["43","44"],"C:\\Workspace\\Skola\\React\\testapp\\src\\App.js",[],"C:\\Workspace\\Skola\\React\\testapp\\src\\reportWebVitals.js",[],"C:\\Workspace\\Skola\\React\\testapp\\src\\routes\\Routing.js",["45","46"],"import React, {useContext, useEffect} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport {HomePage} from '../view/HomePage';\r\nimport { SignInView } from '../view/SignInView';\r\nimport {UserContext} from '../shared/global/provider/UserProvider';\r\n\r\n\r\n\r\nexport const Routing = (props) => {\r\n\r\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\r\n    \r\n    const checkIfUerIsAuthetincatedInBrower = () => {\r\n         setAuthenticatedUser(localStorage.getItem('username'))\r\n    }\r\n\r\n    useEffect(() =>{\r\n        checkIfUerIsAuthetincatedInBrower()\r\n    },[])\r\n\r\n    return (\r\n        <Router>\r\n            {props.children}\r\n            <Switch>\r\n                <Route exact path=\"/signin\" component={SignInView}/>\r\n                <Route component={HomePage} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}","C:\\Workspace\\Skola\\React\\testapp\\src\\view\\HomePage.js",[],"C:\\Workspace\\Skola\\React\\testapp\\src\\components\\Navigationbar\\NavigationBar.js",["47"],"import React, {useContext} from 'react';\r\nimport './NavigationBar.css';\r\nimport logotype from '../../shared/images/logotype.svg'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {UserContext} from '../../shared/global/provider/UserProvider'\r\nimport {Profile} from '../profile/Profile'\r\n\r\nexport const NavigationBar = () => {\r\n    const history = useHistory();\r\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\r\n    \r\n    const displayUserIfAuth = () => {\r\n       return (authenticatedUser) \r\n        ? <div className=\"signin\"> <Profile/> </div>  \r\n        : <span onClick={()=> history.push('/signin')} className=\"signin\">Sign In</span>\r\n    }\r\n\r\n    return(\r\n        <div className=\"navigationBarWrapper\">\r\n            <img onClick={() => history.push('/')} className=\"logotype\" src={logotype} alt=\"Home\"/>\r\n            {displayUserIfAuth()}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Workspace\\Skola\\React\\testapp\\src\\view\\SignInView.js",["48","49"],"import React, { useState, useContext } from 'react';\r\nimport { UserContext } from '../shared/global/provider/UserProvider'\r\nimport './SignInView.css'\r\nimport {useHistory} from 'react-router-dom'\r\n \r\nexport const SignInView = () => {\r\n    const history = useHistory()\r\n    const [username, setUsername] = useState()\r\n    const [password, setPassword] = useState()\r\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\r\n\r\n    const login = () => {\r\n        setAuthenticatedUser(username)\r\n        localStorage.setItem(\"username\", username)\r\n        history.push('/')\r\n    }\r\n\r\n    return(\r\n        <div className=\"profileWrap\">\r\n            <div className=\"inputBox\">\r\n                 <span className=\"inputName\">Username: </span> <input onChange={event =>  setUsername(event.target.value)}/><br />\r\n           <span className=\"inputPass\">Password: </span> <input type=\"password\" onChange={event => setPassword(event.target.value)}/> <br />\r\n           <button className=\"loginButton\" onClick={() => login()}>Login</button>\r\n            </div>\r\n          \r\n        </div>\r\n    )\r\n\r\n}","C:\\Workspace\\Skola\\React\\testapp\\src\\shared\\global\\provider\\UserProvider.js",[],"C:\\Workspace\\Skola\\React\\testapp\\src\\components\\profile\\Profile.js",["50"],"import React, { useContext } from 'react'\r\nimport {UserContext} from '../../shared/global/provider/UserProvider'\r\nimport './Profile.css'\r\n\r\nexport const Profile = () => {\r\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\r\n\r\n    return(\r\n        <div>\r\n            <img className=\"profileImage\" src={\"https://thispersondoesnotexist.com/image\"} alt=\"\" />\r\n            <span className=\"profileName\">{authenticatedUser}</span>\r\n        </div>\r\n    )\r\n}",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":11,"column":12,"nodeType":"57","messageId":"58","endLine":11,"endColumn":29},{"ruleId":"59","severity":1,"message":"60","line":19,"column":7,"nodeType":"61","endLine":19,"endColumn":9,"suggestions":"62"},{"ruleId":"55","severity":1,"message":"63","line":10,"column":31,"nodeType":"57","messageId":"58","endLine":10,"endColumn":51},{"ruleId":"55","severity":1,"message":"64","line":9,"column":12,"nodeType":"57","messageId":"58","endLine":9,"endColumn":20},{"ruleId":"55","severity":1,"message":"56","line":10,"column":12,"nodeType":"57","messageId":"58","endLine":10,"endColumn":29},{"ruleId":"55","severity":1,"message":"63","line":6,"column":31,"nodeType":"57","messageId":"58","endLine":6,"endColumn":51},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'authenticatedUser' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkIfUerIsAuthetincatedInBrower'. Either include it or remove the dependency array.","ArrayExpression",["67"],"'setAuthenticatedUser' is assigned a value but never used.","'password' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [checkIfUerIsAuthetincatedInBrower]",{"range":"70","text":"71"},[622,624],"[checkIfUerIsAuthetincatedInBrower]"]